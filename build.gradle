buildscript {
    dependencies {
        classpath 'com.h2database:h2:1.4.191'
    }
    repositories {
        mavenCentral()
    }
}

plugins {
    id 'java'
    id 'org.jetbrains.kotlin.jvm' version '1.2.71'
    id "org.flywaydb.flyway" version "5.2.0"
}

group = 'com.triangl'
archivesBaseName = 'processing-pipeline'
version = ''
group = ''
sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
    compile group: 'org.apache.beam', name: 'beam-sdks-java-core', version: '2.7.0'
    compile group: 'com.google.cloud.sql', name: 'postgres-socket-factory', version: '1.0.11'
    compile group: 'org.apache.beam', name: 'beam-runners-google-cloud-dataflow-java', version: '2.7.0'
    compile group: 'org.apache.beam', name: 'beam-sdks-java-io-google-cloud-platform', version: '2.7.0'
    compile group: 'org.slf4j', name: 'slf4j-api', version: '1.7.25'
    compile group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.9.6'
    compile group: 'mysql', name: 'mysql-connector-java', version: '8.0.12'
    compile 'com.google.cloud.sql:mysql-socket-factory-connector-j-8:1.0.11'
    compile group: 'commons-beanutils', name: 'commons-beanutils', version: '1.9.3'
    compile group: 'javax.persistence', name: 'javax.persistence-api', version: '2.2'
    compile group: 'org.apache.beam', name: 'beam-runners-direct-java', version: '2.7.0'
    
    testCompile group: 'junit', name: 'junit', version: '4.12'
    testCompile group: 'com.nhaarman', name: 'mockito-kotlin', version: '1.6.0'
    testCompile group: 'org.assertj', name: 'assertj-core', version: '3.11.1'
}
compileKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}
compileTestKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}

flyway {
    url = 'jdbc:mysql://google/serving-prod?cloudSqlInstance=triangl-215714:europe-west3:analyzing&socketFactory=com.google.cloud.sql.mysql.SocketFactory&useSSL=false'
    user = 'root'
    password = 'root'
}

jar {
    doFirst {
        from { configurations.runtime.collect { it.isDirectory() ? it : zipTree(it) } }
    }
    manifest {
        attributes(
            'Main-Class': 'com.triangl.processing.ProcessingApplication'
        )
    }
}